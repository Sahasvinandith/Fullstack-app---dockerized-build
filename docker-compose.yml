# mern-auth-app/docker-compose.yml
version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017" # Expose MongoDB to the host, useful for connecting with a GUI tool
    volumes:
      - mongo_data:/data/db # Persistent data storage for MongoDB
    networks:
      - mern-network # All services will be on this custom network

  backend:
    build: ./backend # Build from the Dockerfile in the ./backend directory
    container_name: backend
    ports:
      - "5000:5000" # Expose the backend API to the host
    environment:
      # MONGO_URI uses 'mongodb' as the hostname because it's the service name within the Docker network
      MONGO_URI: mongodb://mongodb:27017/auth_db
      JWT_SECRET: supersecretjwtkeythatshouldbeverylongandrandom # IMPORTANT: Change this to a strong, random key for production!
      PORT: 5000
    depends_on:
      - mongodb # Ensure MongoDB starts before the backend
    networks:
      - mern-network
    volumes:
      # Mount the backend code for live development. Changes on your host will reflect in the container.
      # This is great for development; for production, you'd typically remove this and rely solely on COPY in Dockerfile.
      - ./backend:/app
      # Explicitly exclude node_modules from the host mount to prevent issues
      # and ensure dependencies are installed inside the container during build.
      - /app/node_modules
    # Command to run the backend application. 'npm run dev' assumes you have nodemon configured.
    command: npm run dev

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: frontend
    ports:
      - "5173:5173" # Map host port 3000 to container port 80 (Nginx default for built app)
    environment:
      # VITE_APP_API_URL points to the backend service.
      # For the frontend running in a *browser* on your host, it needs to
      # connect to the backend *via the host's exposed port*.
      # So, `http://localhost:5000` is correct here for the browser to reach the backend.
      VITE_APP_API_URL: http://localhost:5000
    depends_on:
      - backend # Ensure backend starts before the frontend
    networks:
      - mern-network
    volumes:
      # Mount the frontend code for live development. This is for when you're actively developing.
      # For production, you'd remove this volume and rely on the build step in the Dockerfile.
      - ./frontend:/app
      # Exclude node_modules from the host mount to prevent issues.
      - /app/node_modules
    # Command to run the frontend development server (Vite).
    # This is for development; for production, Nginx will serve the static build.
    command: npm run dev -- --host
volumes:
  mongo_data: # Define a named volume for persistent MongoDB data

networks:
  mern-network: # Define a custom bridge network for internal communication
    driver: bridge